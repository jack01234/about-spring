<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx
       	http://www.springframework.org/schema/tx/spring-tx.xsd"
>

	<!--启用注解-->
	<context:annotation-config/>
	<context:component-scan base-package="cn.springmvc"/>
	<!-- Enable Annotation -->
	<tx:annotation-driven/>

	<!-- 导入属性配置文件 -->
	<context:property-placeholder location="classpath:mysql.properties" />
	<!--配置bean
	class：bean的全类名，通过反射的方式在IOC容器中创建bean，所以要求bean中必须要有无参数的构造器  -->
	<bean id="helloWorld"
		  class="cn.springmvc.service.impl.HelloWorld">
		<!--注入参数值-->
		<property name="name" value = "spring"/>
	</bean>

	<!--配置数据源-->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>"${jdbc.driverClassName}"</value>
		</property>
		<property name="url">
			<value>"${jdbc.url}"</value>
			<!--test是我的数据库  -->
		</property>
	</bean>
	<!-- JDBC Transaction Management-->
	<!--<bean id="hpayWalletTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref bean="hpayWalletDataSource"/>
		</property>
	</bean>-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="annotationClass" value="org.springframework.stereotype.Repository"/>
		<property name="basePackage" value="cn.springmvc.dao"/>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	<!-- Transaction Template-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- mapper bean -->
	<bean id="userDao" class="org.mybatis.spring.MapperFactoryBean">
		<property name="mapperInterface" value="cn.springmvc.dao.UserDao" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- 自动生成dao层实现 -->
	<!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.springmvc.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	<bean id="userDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="cn.springmvc.dao.UserDao"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>-->

</beans>
